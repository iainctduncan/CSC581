This blog post shows using processor options to pass wasm modules:
https://softwayre.com/blog/2021/07/06/first-post
- and this one too:
https://cprimozic.net/blog/buliding-a-wavetable-synthesizer-with-rust-wasm-and-webaudio/#lazily-instantiating-the-webassembly-module

in the main file
  const { instance, module } = WebAssembly.InstantiateStreaming(fetch('quiet.wasm'))
  this.quietProcessorNode = new AudioWorkletNode( this.audioContext, 'quiet-receiver-worklet', 
  { processorOptions: { quietModule: module }, });

and then in the processor code
  class ReceiverWorklet extends AudioWorkletProcessor {
     constructor(options) {
       super();
        const { quietModule } = options.processorOptions;
        ...
     }
  }


